<div class="field-repeater-buttons">

	<a href="javascript:;" onclick="javascript:$('.collapsed .field-repeater', $(this).closest('.form-widget')).data('oc.repeater').collapseAll();" class="item repeater-collapse-all">
		<?= e(trans('backend::lang.dashboard.collapse_all')) ?>
	</a>

	|

	<a href="javascript:;" onclick="javascript:$('.collapsed .field-repeater', $(this).closest('.form-widget')).data('oc.repeater').expandAll();" class="item repeater-expand-all">
		<?= e(trans('backend::lang.dashboard.expand_all')) ?>
	</a>
</div>

<script>

$(document).ready(function() {
	
	var initInterval = setInterval(function () {

		var list = $('.collapsed .field-repeater:not(.auto-collapse)');

		$.each(list, function () {
			$(this).addClass("auto-collapse");
			$(this).data('oc.repeater').collapseAll();
			clearInterval(initInterval);
		});
/*
		if($('.collapsed .field-repeater').data('oc.repeater')) {
			$('.collapsed .field-repeater').data('oc.repeater').collapseAll();
			clearInterval(initInterval);
		}
*/

	}, 1000);

});

</script>


<script>
	function parseVideo (url) {
		// - Supported YouTube URL formats:
		//   - http://www.youtube.com/watch?v=My2FRPA3Gf8
		//   - http://youtu.be/My2FRPA3Gf8
		//   - https://youtube.googleapis.com/v/My2FRPA3Gf8
		// - Supported Vimeo URL formats:
		//   - http://vimeo.com/25451551
		//   - http://player.vimeo.com/video/25451551
		// - Also supports relative URLs:
		//   - //player.vimeo.com/video/25451551

		url.match(/(http:|https:|)\/\/(player.|www.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com))\/(video\/|embed\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(\&\S+)?/);

		if (RegExp.$3.indexOf('youtu') > -1) {
			var type = 'youtube';
		} else if (RegExp.$3.indexOf('vimeo') > -1) {
			var type = 'vimeo';
		}

		return {
			type: type,
			id: RegExp.$6
		};
	}

	function createVideo (url, width, height) {
		// Returns an iframe of the video with the specified URL.
		var videoObj = parseVideo(url);
		var $iframe = $('<iframe>', { width: width, height: height });
		$iframe.attr('frameborder', 0);
		if (videoObj.type == 'youtube') {
			$iframe.attr('src', '//www.youtube.com/embed/' + videoObj.id);
		} else if (videoObj.type == 'vimeo') {
			$iframe.attr('src', '//player.vimeo.com/video/' + videoObj.id);
		}
		return $iframe;
	}

	function getVideoThumbnail (url, cb) {
		// Obtains the video's thumbnail and passed it back to a callback function.
		var videoObj = parseVideo(url);
		if (videoObj.type == 'youtube') {
			cb('//img.youtube.com/vi/' + videoObj.id + '/maxresdefault.jpg');
		} else if (videoObj.type == 'vimeo') {
			// Requires jQuery


			$.post('/backend/cubecamp/uxda/helper/video', {type: videoObj.type, id: videoObj.id}, function(data) {
				cb(data.video.thumbnail_large);
			});
/*
			$.get('https://vimeo.com/api/v2/video/' + videoObj.id + '.json', function(data) {
				cb(data[0].thumbnail_large);
 			});
*/
		}
	}


	$(document).on("change", ".video-url input", function () {
//		console.log($(this).parent().next('.video-id'));
		//var parse = parseVideo($(this).val());
		var self = this;
		getVideoThumbnail($(self).val(), function (image) {
			console.log(image);
			$("input", $(self).parent().next('.video-image')).val(image);
		});
//		console.log(parse);
//		$("input", $(this).parent().next('.video-image')).val(parse.id);
	});

</script>